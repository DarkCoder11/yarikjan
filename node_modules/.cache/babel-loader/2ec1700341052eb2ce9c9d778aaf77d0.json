{"ast":null,"code":"import _classCallCheck from \"/Users/shelllogix/Desktop/vidya/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shelllogix/Desktop/vidya/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shelllogix/Desktop/vidya/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shelllogix/Desktop/vidya/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shelllogix/Desktop/vidya/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shelllogix/Desktop/vidya/src/containers/DiscoveryList/DiscoveryList.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _fetchUsers from '../../store/actions/fetchUsers/fetchUsers';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Discovery from '../../components/Discovery/Discovery';\nimport Offer from '../../components/Offer/Offer';\nimport Aux from '../../hoc/Aux/Aux';\nimport './DiscoveryList.css';\n\nvar DiscoveryList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DiscoveryList, _Component);\n\n  function DiscoveryList() {\n    _classCallCheck(this, DiscoveryList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DiscoveryList).apply(this, arguments));\n  }\n\n  _createClass(DiscoveryList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUsers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          users = _this$props.users,\n          spinner = _this$props.spinner;\n      var context = spinner ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }) : users.map(function (user) {\n        return React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, user.id === 2 ? React.createElement(Offer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }) : null, React.createElement(Discovery, {\n          key: user.id,\n          id: user.id,\n          teacherAvatar: user.avatar,\n          teacherName: user.first_name,\n          teacherLastName: user.last_name,\n          teacherProfession: user.profession,\n          courses: user.courses,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, context);\n    }\n  }]);\n\n  return DiscoveryList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users.users,\n    spinner: state.spinner.spinner,\n    courses: state.courses.courses\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUsers: function fetchUsers() {\n      return dispatch(_fetchUsers());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscoveryList);","map":{"version":3,"sources":["/Users/shelllogix/Desktop/vidya/src/containers/DiscoveryList/DiscoveryList.js"],"names":["React","Component","connect","fetchUsers","Spinner","Discovery","Offer","Aux","DiscoveryList","props","users","spinner","context","map","user","id","avatar","first_name","last_name","profession","courses","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAuB,2CAAvB;AAEA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,qBAAP;;IAEMC,a;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWN,UAAX;AACD;;;6BACQ;AAAA,wBACoB,KAAKM,KADzB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAEP,UAAIC,OAAO,GAAGD,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAiBD,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,eAClD,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,IAAI,CAACC,EAAL,KAAY,CAAZ,GAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,GAA2B,IAD9B,EAEE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAED,IAAI,CAACC,EADZ;AAEE,UAAA,EAAE,EAAED,IAAI,CAACC,EAFX;AAGE,UAAA,aAAa,EAAED,IAAI,CAACE,MAHtB;AAIE,UAAA,WAAW,EAAEF,IAAI,CAACG,UAJpB;AAKE,UAAA,eAAe,EAAEH,IAAI,CAACI,SALxB;AAME,UAAA,iBAAiB,EAAEJ,IAAI,CAACK,UAN1B;AAOE,UAAA,OAAO,EAAEL,IAAI,CAACM,OAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADkD;AAAA,OAAd,CAAtC;AAgBA,aACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,OADH,CADF;AAKD;;;;EA3ByBX,S;;AA8B5B,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ,KAAN,CAAYA,KADd;AAELC,IAAAA,OAAO,EAAEW,KAAK,CAACX,OAAN,CAAcA,OAFlB;AAGLS,IAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcA;AAHlB,GAAP;AAKD,CAND;;AAQA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLrB,IAAAA,UAAU,EAAE;AAAA,aAAMqB,QAAQ,CAACrB,WAAU,EAAX,CAAd;AAAA;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport fetchUsers from '../../store/actions/fetchUsers/fetchUsers';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Discovery from '../../components/Discovery/Discovery';\nimport Offer from '../../components/Offer/Offer';\nimport Aux from '../../hoc/Aux/Aux';\nimport './DiscoveryList.css';\n\nclass DiscoveryList extends Component {\n  componentDidMount() {\n    this.props.fetchUsers()\n  }\n  render() {\n    const { users, spinner } = this.props\n    let context = spinner ? <Spinner /> : users.map(user => (\n      <Aux>\n        {user.id === 2 ? <Offer/> : null}\n        <Discovery\n          key={user.id}\n          id={user.id}\n          teacherAvatar={user.avatar}\n          teacherName={user.first_name}\n          teacherLastName={user.last_name}\n          teacherProfession={user.profession}\n          courses={user.courses}\n        />\n      </Aux>\n\n    ))\n\n    return (\n      <div className=\"row justify-content-between\">\n        {context}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    spinner: state.spinner.spinner,\n    courses: state.courses.courses\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscoveryList);"]},"metadata":{},"sourceType":"module"}